# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: recognizer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='recognizer.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10recognizer.proto\"\x18\n\x05\x43hunk\x12\x0f\n\x07\x43ontent\x18\x01 \x01(\x0c\"\x1e\n\x0bResultReply\x12\x0f\n\x07message\x18\x01 \x01(\t20\n\x08NNetwork\x12$\n\x08GetAudio\x12\x06.Chunk\x1a\x0c.ResultReply\"\x00(\x01\x62\x06proto3'
)




_CHUNK = _descriptor.Descriptor(
  name='Chunk',
  full_name='Chunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='Content', full_name='Chunk.Content', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=b"",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=20,
  serialized_end=44,
)


_RESULTREPLY = _descriptor.Descriptor(
  name='ResultReply',
  full_name='ResultReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='ResultReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=76,
)

DESCRIPTOR.message_types_by_name['Chunk'] = _CHUNK
DESCRIPTOR.message_types_by_name['ResultReply'] = _RESULTREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Chunk = _reflection.GeneratedProtocolMessageType('Chunk', (_message.Message,), {
  'DESCRIPTOR' : _CHUNK,
  '__module__' : 'recognizer_pb2'
  # @@protoc_insertion_point(class_scope:Chunk)
  })
_sym_db.RegisterMessage(Chunk)

ResultReply = _reflection.GeneratedProtocolMessageType('ResultReply', (_message.Message,), {
  'DESCRIPTOR' : _RESULTREPLY,
  '__module__' : 'recognizer_pb2'
  # @@protoc_insertion_point(class_scope:ResultReply)
  })
_sym_db.RegisterMessage(ResultReply)



_NNETWORK = _descriptor.ServiceDescriptor(
  name='NNetwork',
  full_name='NNetwork',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=78,
  serialized_end=126,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAudio',
    full_name='NNetwork.GetAudio',
    index=0,
    containing_service=None,
    input_type=_CHUNK,
    output_type=_RESULTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_NNETWORK)

DESCRIPTOR.services_by_name['NNetwork'] = _NNETWORK

# @@protoc_insertion_point(module_scope)
